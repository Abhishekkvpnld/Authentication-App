{"ast":null,"code":"import toast from \"react-hot-toast\";\n\n/**Username validation */\n\nexport async function usernameValidate(values) {\n  const error = usernameVerify({}, values);\n  return error;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required...!\");\n  } else if (!values.username.includes(\"\")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\n\n/** Password validation */\n\nexport async function passwordValidate(values) {\n  const error = passwordVerify({}, values);\n  return error;\n}\nfunction passwordVerify(errors = {}, values) {\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required....!\");\n  } else if (values.password.includes(\"\")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.legth < 4) {\n    errors.password = t;\n  }\n}","map":{"version":3,"names":["toast","usernameValidate","values","error","usernameVerify","username","includes","passwordValidate","passwordVerify","errors","password","legth","t"],"sources":["C:/Users/JISHN/Documents/projects/Authentication app/client/src/helper/Validate.jsx"],"sourcesContent":["import toast from \"react-hot-toast\";\r\n\r\n\r\n/**Username validation */\r\n\r\nexport async function usernameValidate(values){\r\n    const error = usernameVerify({},values)\r\n    return error;\r\n}\r\n\r\nfunction usernameVerify (error={},values){\r\n    if(!values.username){\r\n        error.username = toast.error(\"Username Required...!\")\r\n    }else if(!values.username.includes(\"\")) {\r\n        error.username = toast.error(\"Invalid Username...!\")\r\n    }\r\n    return error\r\n}\r\n\r\n/** Password validation */\r\n\r\nexport async function passwordValidate (values){\r\n    const error = passwordVerify({},values)\r\n    return error\r\n}\r\n\r\nfunction passwordVerify (errors={},values){\r\nif(!values.password){\r\n    errors.password = toast.error(\"Password Required....!\")\r\n}else if(values.password.includes(\"\")){\r\nerrors.password = toast.error(\"Wrong Password...!\")\r\n}else if(values.password.legth<4){\r\n    errors.password = t\r\n}\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;;AAGnC;;AAEA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,KAAK,GAAGC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EACvC,OAAOC,KAAK;AAChB;AAEA,SAASC,cAAcA,CAAED,KAAK,GAAC,CAAC,CAAC,EAACD,MAAM,EAAC;EACrC,IAAG,CAACA,MAAM,CAACG,QAAQ,EAAC;IAChBF,KAAK,CAACE,QAAQ,GAAGL,KAAK,CAACG,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAG,CAACD,MAAM,CAACG,QAAQ,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE;IACpCH,KAAK,CAACE,QAAQ,GAAGL,KAAK,CAACG,KAAK,CAAC,sBAAsB,CAAC;EACxD;EACA,OAAOA,KAAK;AAChB;;AAEA;;AAEA,OAAO,eAAeI,gBAAgBA,CAAEL,MAAM,EAAC;EAC3C,MAAMC,KAAK,GAAGK,cAAc,CAAC,CAAC,CAAC,EAACN,MAAM,CAAC;EACvC,OAAOC,KAAK;AAChB;AAEA,SAASK,cAAcA,CAAEC,MAAM,GAAC,CAAC,CAAC,EAACP,MAAM,EAAC;EAC1C,IAAG,CAACA,MAAM,CAACQ,QAAQ,EAAC;IAChBD,MAAM,CAACC,QAAQ,GAAGV,KAAK,CAACG,KAAK,CAAC,wBAAwB,CAAC;EAC3D,CAAC,MAAK,IAAGD,MAAM,CAACQ,QAAQ,CAACJ,QAAQ,CAAC,EAAE,CAAC,EAAC;IACtCG,MAAM,CAACC,QAAQ,GAAGV,KAAK,CAACG,KAAK,CAAC,oBAAoB,CAAC;EACnD,CAAC,MAAK,IAAGD,MAAM,CAACQ,QAAQ,CAACC,KAAK,GAAC,CAAC,EAAC;IAC7BF,MAAM,CAACC,QAAQ,GAAGE,CAAC;EACvB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
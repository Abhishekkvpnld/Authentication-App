{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Avatar from '../Assets/profile.png';\nimport '../styles/password.css';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useFormik } from \"formik\";\nimport { passwordValidate } from \"../helper/Validate\";\nimport useFetch from '../hooks/fetch_hook';\nimport { useAuthStore } from '../store/store';\nimport { verifyPassword } from \"../helper/helper.jsx\";\nfunction Password() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    username\n  } = useAuthStore(state => state.auth);\n  const data = useFetch(`user/${username}`);\n  console.log(d);\n\n  //   const formik = useFormik({\n\n  //     initialValues:{\n  //       password:'admin@123'\n  //     },\n  //     validateOnBlur:false,\n  //     validateOnChange:false,\n  //     validate:passwordValidate,\n  //     onSubmit: async values =>{\n\n  // let loginPromise = verifyPassword({username,password:values.password})\n\n  // toast.promise(loginPromise,{\n  //   loading:'Checking...!',\n  //   success:<b>Login Successfull...!</b>,\n  //   error:<b>Password Not Match...!</b>\n  // })\n\n  // loginPromise\n  //   .then(response => {\n  //     let token = response.data.token;\n  //     localStorage.setItem('token', token);\n  //     // navigate('/profile');\n  //   })\n  //   .catch(error => {\n  //     console.error('Login failed:', error);\n  //     // Handle the error, display a message, or redirect to an error page if needed.\n  //   });\n\n  //     }\n  //   }); \n\n  // if(isLoading)return <h1 className='text-2xl font-bold'>isLoading</h1>\n  // if(serverError)return <h1 className='text-xl text-red-500'>{serverError.message}</h1>\n\n  //   return ( \n  //     <div className=\"container mx-auto username-container\">\n  //       <Toaster position='top-right' reverseOrder={false}></Toaster>\n  //       <div className=\"flex justify-center items-center \">\n  //         <div className=\"glass\">\n  //           <div className=\"title flex flex-col items-center\">\n  //             <h4 className=\"text-5xl font-bold\">Hello {apiData?.firstName || apiData?.username}</h4>\n  //             <span className=\"py-4 text-xl w-2/3 text-center text-grey-500\">\n  //               Explore More by connecting with us\n  //             </span>\n  //           </div>\n\n  //           <form className=\"py-1 \" onSubmit={formik.handleSubmit}>\n  //             <div className=\"profile flex justify-center py-4\">\n  //               <img src={ apiData?.profile || Avatar} alt=\"Avatar\" className=\"profile_img\" />\n  //             </div>\n\n  //             <div className=\"textbox flex flex-col items-center gap-6\">\n  //               <input{...formik.getFieldProps('password')} type=\"text\" placeholder=\"password\" className=\"input-box textbox\" />\n  //               <button type=\"submit\" className=\"btn\">\n  //                Sign In\n  //               </button>\n  //             </div>\n\n  //             <div className=\"text-center py-4\">\n  //               <span className=\"text-grey-500\">\n  //                 Forgot Password?{' '}\n  //                 <Link className=\"text-red-500\" to=\"/recovery\">\n  //                   Recover Now\n  //                 </Link>\n  //               </span>\n  //             </div>\n  //           </form>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n}\n_s(Password, \"SXV/GQGx/UNsMzqbS0/lMoJBzO8=\", false, function () {\n  return [useNavigate, useAuthStore, useFetch];\n});\n_c = Password;\nexport default Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","Link","useNavigate","Avatar","toast","Toaster","useFormik","passwordValidate","useFetch","useAuthStore","verifyPassword","Password","_s","navigate","username","state","auth","data","console","log","d","_c","$RefreshReg$"],"sources":["C:/Users/JISHN/Documents/projects/Authentication app/client/src/Components/Password.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Link,useNavigate } from 'react-router-dom';\r\nimport Avatar from '../Assets/profile.png';\r\nimport '../styles/password.css';\r\nimport toast,{Toaster} from \"react-hot-toast\";\r\nimport {useFormik} from \"formik\"\r\nimport {passwordValidate} from \"../helper/Validate\"\r\nimport useFetch from '../hooks/fetch_hook';\r\nimport { useAuthStore } from '../store/store';\r\nimport {verifyPassword} from \"../helper/helper.jsx\"\r\n\r\nfunction Password() {\r\n\r\n  const navigate = useNavigate();\r\nconst {username} = useAuthStore(state=>state.auth);\r\n\r\nconst data = useFetch(`user/${username}`);\r\nconsole.log(d);\r\n\r\n//   const formik = useFormik({\r\n\r\n//     initialValues:{\r\n//       password:'admin@123'\r\n//     },\r\n//     validateOnBlur:false,\r\n//     validateOnChange:false,\r\n//     validate:passwordValidate,\r\n//     onSubmit: async values =>{\r\n      \r\n// let loginPromise = verifyPassword({username,password:values.password})\r\n\r\n// toast.promise(loginPromise,{\r\n//   loading:'Checking...!',\r\n//   success:<b>Login Successfull...!</b>,\r\n//   error:<b>Password Not Match...!</b>\r\n// })\r\n\r\n// loginPromise\r\n//   .then(response => {\r\n//     let token = response.data.token;\r\n//     localStorage.setItem('token', token);\r\n//     // navigate('/profile');\r\n//   })\r\n//   .catch(error => {\r\n//     console.error('Login failed:', error);\r\n//     // Handle the error, display a message, or redirect to an error page if needed.\r\n//   });\r\n\r\n//     }\r\n//   }); \r\n\r\n// if(isLoading)return <h1 className='text-2xl font-bold'>isLoading</h1>\r\n// if(serverError)return <h1 className='text-xl text-red-500'>{serverError.message}</h1>\r\n\r\n//   return ( \r\n//     <div className=\"container mx-auto username-container\">\r\n//       <Toaster position='top-right' reverseOrder={false}></Toaster>\r\n//       <div className=\"flex justify-center items-center \">\r\n//         <div className=\"glass\">\r\n//           <div className=\"title flex flex-col items-center\">\r\n//             <h4 className=\"text-5xl font-bold\">Hello {apiData?.firstName || apiData?.username}</h4>\r\n//             <span className=\"py-4 text-xl w-2/3 text-center text-grey-500\">\r\n//               Explore More by connecting with us\r\n//             </span>\r\n//           </div>\r\n\r\n//           <form className=\"py-1 \" onSubmit={formik.handleSubmit}>\r\n//             <div className=\"profile flex justify-center py-4\">\r\n//               <img src={ apiData?.profile || Avatar} alt=\"Avatar\" className=\"profile_img\" />\r\n//             </div>\r\n\r\n//             <div className=\"textbox flex flex-col items-center gap-6\">\r\n//               <input{...formik.getFieldProps('password')} type=\"text\" placeholder=\"password\" className=\"input-box textbox\" />\r\n//               <button type=\"submit\" className=\"btn\">\r\n//                Sign In\r\n//               </button>\r\n//             </div>\r\n\r\n//             <div className=\"text-center py-4\">\r\n//               <span className=\"text-grey-500\">\r\n//                 Forgot Password?{' '}\r\n//                 <Link className=\"text-red-500\" to=\"/recovery\">\r\n//                   Recover Now\r\n//                 </Link>\r\n//               </span>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n}\r\n\r\nexport default Password"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAACC,WAAW,QAAQ,kBAAkB;AACnD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAO,wBAAwB;AAC/B,OAAOC,KAAK,IAAEC,OAAO,QAAO,iBAAiB;AAC7C,SAAQC,SAAS,QAAO,QAAQ;AAChC,SAAQC,gBAAgB,QAAO,oBAAoB;AACnD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAAQC,cAAc,QAAO,sBAAsB;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAChC,MAAM;IAACY;EAAQ,CAAC,GAAGL,YAAY,CAACM,KAAK,IAAEA,KAAK,CAACC,IAAI,CAAC;EAElD,MAAMC,IAAI,GAAGT,QAAQ,CAAE,QAAOM,QAAS,EAAC,CAAC;EACzCI,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;;EAEd;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AAACR,EAAA,CAhFQD,QAAQ;EAAA,QAEET,WAAW,EACXO,YAAY,EAElBD,QAAQ;AAAA;AAAAa,EAAA,GALZV,QAAQ;AAkFjB,eAAeA,QAAQ;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}